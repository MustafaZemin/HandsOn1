name: Java CI with Gradle and CD

on:
  push:
    branches: [ "master", "develop", "feature/**", "release/**", "hotfix/**" ]
  pull_request:
    branches: [ "master", "develop", "feature/**", "release/**", "hotfix/**" ]

jobs:
  build:

    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Setup Gradle
      uses: gradle/actions/setup-gradle@417ae3ccd767c252f5661f1ace9f835f9654f2b5 # v3.1.0

    - name: Permission Allowed
      run: git update-index --chmod=+x gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Run Tests
      run: ./gradlew test

  deploy_dev:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Deploy to Development
      run: |
        aws lambda update-function-code --function-name my-function-dev --zip-file fileb://function.zip

  deploy_qa:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Deploy to QA
      if: github.ref == 'refs/heads/release/**'
      run: |
        aws lambda update-function-code --function-name my-function-qa --zip-file fileb://function.zip

  deploy_prod:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
    - name: Deploy to Production
      if: github.ref == 'refs/heads/master'
      run: |
        aws lambda update-function-code --function-name my-function-prod --zip-file fileb://function.zip
